clear()

### Read in sequence data
path = "/Users/loaner/Desktop/RevBayes/data/"

### Read in sequence data
data <- readDiscreteCharacterData(path + "binary_screened.nex")


#Number of taxa
n_taxa <- data.ntaxa()

# Number of branches in a rooted tree
# n_branches <- 2 * n_taxa - 2

# Number of branches in an unrooted tree
n_branches <- 2 * n_taxa - 3

#Taxa
taxa <- data.taxa()

#Store moves and monitors in helpers
moves    = VectorMoves()
monitors = VectorMonitors()


######################
## Transition Model ##
######################


Q <- fnJC(2)


##############
# Tree model #
##############

anatolian = clade("HI", "LY", "LU")

topology ~ dnUniformTopology(taxa, outgroup=anatolian)

# These are moves that change the tree topology

moves.append( mvNNI(topology, weight=n_taxa/2.0) )
moves.append( mvSPR(topology, weight=n_taxa/10.0) )

# Branch length prior

for (i in 1:n_branches) {
    bl[i] ~ dnExponential(10.0)
    moves.append( mvScale(bl[i]) )
}

TL := sum(bl)

psi := treeAssembly(topology, bl)

###################
# PhyloCTMC Model #
###################


seq ~ dnPhyloCTMC(tree=psi, Q=Q, type="Standard")

seq.clamp(data)


############
# Analysis #
############

#You can use any node as the argument of model()
mymodel = model(psi)

####################################
# Run the power-posterior analysis #
####################################

pow_p = powerPosterior(mymodel, moves, monitors, "output/ringe_jc_simplest_powp.out", cats=50, sampleFreq=10)
#pow_p.burnin(generations=0,tuningInterval=200)
pow_p.run(generations=100)

###################################
# Run the stepping-stone analysis #
###################################

ss = steppingStoneSampler(file="output/ringe_jc_simplest_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")

write("Stepping stone marginal likelihood:\t", ss.marginal() )

ps = pathSampler(file="output/ringe_jc_simplest_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")
write("Path-sampling marginal likelihood:\t", ps.marginal() )
