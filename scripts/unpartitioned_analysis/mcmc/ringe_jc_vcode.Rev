clear()


## Specify directory for the .nex file
path = ""

### Read in sequence data
data <- readDiscreteCharacterData(path + "binary_screened.nex")

#Number of taxa
n_taxa <- data.ntaxa()

# Number of branches in a rooted tree
# n_branches <- 2 * n_taxa - 2

# Number of branches in an unrooted tree
n_branches <- 2 * n_taxa - 3

#Taxa
taxa <- data.taxa()

#Store moves and monitors in helpers
moves    = VectorMoves()
monitors = VectorMonitors()


######################
## Transition Model ##
######################


Q <- fnJC(2)


##############
# Tree model #
##############

anatolian = clade("HI", "LY", "LU")

topology ~ dnUniformTopology(taxa, outgroup=anatolian)

# These are moves that change the tree topology

moves.append( mvNNI(topology, weight=n_taxa/2.0) )
moves.append( mvSPR(topology, weight=n_taxa/10.0) )

# Branch length prior

for (i in 1:n_branches) {
    bl[i] ~ dnExponential(10.0)
    moves.append( mvScale(bl[i]) )
}

TL := sum(bl)

psi := treeAssembly(topology, bl)

###################
# PhyloCTMC Model #
###################
#################### coding = "variable" takes coding bias into account. 

seq ~ dnPhyloCTMC(tree=psi, Q=Q, type="Standard", coding="variable")

seq.clamp(data)


############
# Analysis #
############

#You can use any node as the argument of model()
mymodel = model(psi)

generations = 10


monitors.append( mnScreen(TL, printgen=generations) )
#This monitors the trees and puts them in a file
monitors.append( mnFile(psi, filename="output/ringe_jc_simplest_vcode.trees", printgen=generations) )
#Model monitor
monitors.append( mnModel(filename="output/ringe_jc_simplest_vcode.log", printgen=generations) )

mymcmc = mcmc(mymodel, moves, monitors)


mymcmc.burnin(generations=100, tuningInterval=10)
mymcmc.run(generations=20000)

#This gives you a summary of the MCMC chains
mymcmc.operatorSummary()


###################
# Post processing #
###################


treetrace = readTreeTrace("output/ringe_jc_simplest_vcode.trees", outgroup=anatolian,  treetype="non-clock")

map_tree = mapTree(treetrace, "output/ringe_jc_simplest_vcode_map.tree")

mcc_tree = mccTree(treetrace, "output/ringe_jc_simplest_vcode_mcc.tree")
