clear()

##########################
#Reading-in Sequence Data#
###########################


#Put the path to the folder containing ringe_modified.nex on your machine here
path = "/Users/loaner/Desktop/RevBayes/data/"

filenames <- v(path + "ringelexicalcharacters.nex", path + "ringephonologicalcharacters.nex", path + "ringemorphologicalcharacters.nex")

n_data_subsets <- filenames.size()

### Read in sequence data
for (i in 1:n_data_subsets){
    data[i] = readDiscreteCharacterData(filenames[i])
    num_sites[i] = data[i].nchar()
}
taxa <- data[1].taxa()
n_taxa <- data[1].ntaxa()
n_branches <- 2 * n_taxa - 3

#############################
#Setting up Moves and Monitors#
#############################

moves    = VectorMoves()
monitors = VectorMonitors()

anatolian = clade("HI", "LY", "LU")

####################
#Subsitution Model##
####################

source("/Users/loaner/Desktop/RevBayes/scripts/mcmc/substitution_model_gtr.Rev")

####################
#Site-rate model#
###################

source("/Users/loaner/Desktop/RevBayes/scripts/mcmc/site_variation.Rev") #site-rate model

##########################################################################################
# Tree Model: Gamma #
##########################################################################################
TL ~ dnGamma(2,4)
moves.append( mvScale(TL) )
rel_branch_lengths ~ dnDirichlet( rep(1.0,n_branches) )
moves.append( mvBetaSimplex(rel_branch_lengths, weight=n_branches) )
moves.append( mvDirichletSimplex(rel_branch_lengths, weight=n_branches/10.0) )
br_lens := rel_branch_lengths * TL
topology ~ dnUniformTopology(taxa)
moves.append( mvNNI(topology, weight=n_taxa/2.0) )
moves.append( mvSPR(topology, weight=n_taxa/10.0) )
psi := treeAssembly(topology, br_lens)

###################
# PhyloCTMC Model #
###################

for (i in 1:n_data_subsets) {
    seq[i] ~ dnPhyloCTMC(tree=psi, Q=Q[i], branchRates=part_rate[i], siteRates=gamma_rates[i], pInv=pinvar[i], type="Standard")
    seq[i].clamp(data[i])
}



############
# Analysis #
############

#You can use any node as the argument of model()
my_model = model(psi)

generations = 100

monitors.append( mnScreen( printgen=10) )
monitors.append( mnFile( filename="output/ringe_gtr_g_i_part_gamma_br_lens.trees", printgen=10) )
monitors.append( mnModel(filename="output/ringe_gtr_g_i_part_gamma_br_lens.log",printgen=10) )

mymc = mcmc(my_model, moves, monitors, nruns=3, combine="mixed")
mymc.run(1000,tuningInterval=100)

#This gives you a summary of the MCMC chains
mymc.operatorSummary()


###################
# Post processing #
###################


treetrace = readTreeTrace("output/ringe_gtr_g_i_part_gamma_br_lens.trees", outgroup=anatolian,  treetype="non-clock")

map_tree = mapTree(treetrace, "output/ringe_gtr_g_i_part_gamma_br_lens_map.tree")

mcc_tree = mccTree(treetrace, "output/ringe_gtr_g_i_part_gamma_br_lens_mcc.tree")
