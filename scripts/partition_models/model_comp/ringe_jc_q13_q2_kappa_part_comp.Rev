clear()

##########################
#Reading-in Sequence Data#
###########################


#Put the path to the folder containing ringe_modified.nex on your machine here
path = "/Users/loaner/Desktop/RevBayes/data/"

filenames <- v(path + "ringelexicalcharacters.nex", path + "ringephonologicalcharacters.nex", path + "ringemorphologicalcharacters.nex")

n_data_subsets <- filenames.size()

### Read in sequence data
for (i in 1:n_data_subsets){
    data[i] = readDiscreteCharacterData(filenames[i])
    num_sites[i] = data[i].nchar()
}
taxa <- data[1].taxa()
n_taxa <- data[1].ntaxa()
n_branches <- 2 * n_taxa - 3

#############################
#Setting up Moves and Monitors#
#############################

moves    = VectorMoves()
monitors = VectorMonitors()

anatolian = clade("HI", "LY", "LU")

####################
#Subsitution Model##
####################

Q[1] := fnJC(2)

pi_prior <- v(1,1,1,1)
pi ~ dnDirichlet(pi_prior)

# specify a move to propose updates to on pi
moves.append( mvBetaSimplex(pi, weight=2) )
moves.append( mvDirichletSimplex(pi, weight=1) )

# specify a lognormal distribution as the prior distribution on kappa
kappa ~ dnLognormal(0.0,1.25)

# a simple scaling move to update kappa
moves.append( mvScale(kappa) )

# Finally, create the HKY rate matrix
Q[2] := fnHKY(kappa,pi)
Q[3] := fnJC(2)

####################
#Site-rate model#
###################

source("/Users/loaner/Desktop/lmu_pres/scripts/partition_models/site_variation/site_variation_part.Rev") #site-rate model

##########################################################################################
# Tree Model: Simple #
##########################################################################################


topology ~ dnUniformTopology(taxa, outgroup=anatolian)


# These are moves that change the tree topology
moves.append( mvNNI(topology, weight=n_taxa/2.0) )
moves.append( mvSPR(topology, weight=n_taxa/10.0) )

# Branch length prior
for (i in 1:n_branches) {
    bl[i] ~ dnExponential(10.0)
    moves.append( mvScale(bl[i]) )
}

TL := sum(bl)

psi := treeAssembly(topology, bl)

###################
# PhyloCTMC Model #
###################

for (i in 1:n_data_subsets) {
    seq[i] ~ dnPhyloCTMC(tree=psi, Q=Q[i], siteRates=gamma_rates[i], pInv=pinvar[i], type="Standard")
    seq[i].clamp(data[i])
}

############
# Analysis #
############

#You can use any node as the argument of model()
my_model = model(psi)

####################################
# Run the power-posterior analysis #
####################################

pow_p = powerPosterior(my_model, moves, monitors, "output/ringe_jc_q13_q2_kappa_part_comp_powp.out", cats=50, sampleFreq=10)
#pow_p.burnin(generations=0,tuningInterval=200)
pow_p.run(generations=1000)

###################################
# Run the stepping-stone analysis #
###################################

ss = steppingStoneSampler(file="output/ringe_jc_q13_q2_kappa_part_comp_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")

write("Stepping stone marginal likelihood:\t", ss.marginal() )

ps = pathSampler(file="output/ringe_jc_q13_q2_kappa_part_comp_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")
write("Path-sampling marginal likelihood:\t", ps.marginal() )
